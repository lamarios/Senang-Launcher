# This is a basic workflow to help you get started with Actions
name: Flutter

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]
    paths-ignore:
      - '**/README.md'
  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  # A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    name: flutter analyze and build
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    #env:
    #  JAVA_VERSION: "11.0"
    #  FLUTTER_VERSION: "2.5.3"
    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v22
        with:
          nix_path: nixpkgs=channel:nixos-23.11
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
      #- uses: actions/setup-java@v1
      #  with:
      #    java-version: $
      #- uses: subosito/flutter-action@v2
      #  with:
      #    flutter-version: $
      - run: git submodule init
      - run: git submodule update
      - run: set -e
      - run: ./submodules/flutter/bin/flutter doctor
      - run: ./submodules/flutter/bin/flutter config --no-analytics
      - run: ./submodules/flutter/bin/flutter pub get
      - run: ./submodules/flutter/bin/dart format --output=none --set-exit-if-changed ./lib
      - run: ./submodules/flutter/bin/dart analyze ./lib  --no-fatal-warnings
   #   - name: Run tests with nix (starts postgres and invidious server)
   #     run: nix-shell --run './submodules/flutter/bin/flutter test'
   #   - run: ./submodules/flutter/bin/flutter pub run flutter_native_splash:create
      - run: ./submodules/flutter/bin/flutter build apk --profile --split-per-abi
      - name: Archive build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: apks
          path: build/app/outputs/flutter-apk